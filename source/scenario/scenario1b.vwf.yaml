---
extends: source/scenario/scenario.vwf
properties:
  scenarioName: scenario1b

  nextScenarioPath: "scenario1c"
  blockly: assets/scenario/scenario1b.xml

  startState:
  - setProperty:
    - rover
    - battery
    - 8
  - setProperty:
    - rover
    - batteryMax
    - 8
  - setProperty:
    - rover
    - blockly_allowedBlocks
    - 1
  - setProperty:
    - rover
    - lowRam
    - 0    

  # TODO: Simplify heading/rotation
  # Set initial rotation using heading
  # Currently, moveLeft & moveRight in rover.js
  # fight with adding that to the setter of heading
  - setProperty:
    - rover
    - heading
    - 0
  - setProperty:
    - rover
    - rotation
    - [ 0, 0, 1, 0 ]

  - emptyInventory:
    - rover/cargo

  - addToGrid:
    - rover
    - [ 8, 2 ]

  - addToGrid:
    - helicam
    - [ 8, 3 ]

  - addToGrid:
    - battery
    - [ 8, 6 ]

  - addToGrid:
    - radio
    - [ 8, 16 ]

children:
  triggerManager:
    extends: source/triggers/triggerManager.vwf
    properties: 
      triggers:
        beginScenario_1b:
          triggerCondition:
          - onScenarioStart:
          actions:
          - playSound:
            - musicStandardGameplay

        playStartingVO_1b:
          triggerCondition:
          - onScenarioStart:
          additionalCondition:
          - not:
            - readBlackboard:
              - Level1bStartSounds
          actions:
          - playSound:
            - L1VO7_Rover
          - writeToBlackboard:
            - Level1bStartSounds

        succeedOnSuccess_1b:
          triggerCondition:
          - onBlocklyStopped:
            - rover
          additionalCondition:
          - isAtPosition:
            - rover
            - 8
            - 3
          actions:
          - scenarioSuccess:
          - showAlert:
            - "You have executed a movement command and picked up your helicam!"
          - clearBlockly:
          - stopSound:
            - musicStandardGameplay
          - playSound:
            - musicSuccessShort
          - playSound:
            - L1VO8_Rover

        playHint1_1b:
          triggerCondition:
          - delay:
            - 20
          additionalCondition:
          - and:
            - not:
              - readBlackboard:
                - Level1bHint1
            - not:
              - readBlackboard:
                - Level1bHint2
            - not:
              - readBlackboard:
                - hasSucceeded
            - not:
              - readBlackboard:
                - hasFailed
          actions:
          - writeToBlackboard:
            - Level1bHint1
          - playSound:
            - ALVO15_Rover

        playHint2_1b:
          triggerCondition:
          - onBlocklyProgramChanged:
            - rover
            - add
            - rover_moveForward
          additionalCondition:
          - and:
            - not:
              - readBlackboard:
                - Level1bHint2
            - not:
              - readBlackboard:
                - hasSucceeded
            - not:
              - readBlackboard:
                - hasFailed
          actions:
          - playSound:
            - ALVO16_Rover
          - writeToBlackboard:
            - Level1bHint2

  grid:
    includes: source/grid.vwf
    properties:
      minX: 0
      maxX: 16
      minY: -4
      maxY: 18
      gridOriginInSpace: [ -24, -6 ]
      gridSquareLength: 3
      boundaryValues:
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1 ]
      - [ -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1, -1 ]
      - [ -1, -1, -1, -1, -1, -1,  1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1,  1,  1,  1, -1 ]
      - [ -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1,  1,  1,  1,  1, -1 ]
      - [ -1, -1, -1, -1, -1, -1,  1, -1, -1,  1,  1,  1,  1,  1, -1, -1,  1,  1,  1,  1,  1, -1 ]
      - [ -1, -1, -1, -1, -1, -1,  1, -1, -1,  1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1,  1,  1,  1,  1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1,  1,  1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ]
