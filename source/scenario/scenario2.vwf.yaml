---
extends: source/scenario/scenario.vwf
properties:
  scenarioName: scenario2

  scenePath: /
  nextScenarioPath: "scenario3"
  blockly: assets/scenario/scenario1.xml

  startState:
  - setProperty:
    - rover
    - battery
    - 50
  - setProperty:
    - rover
    - batteryMax
    - 50
  - setProperty:
    - rover
    - blockly_allowedBlocks
    - 30

  - setSceneProperty:
    - blockly_activeNodeID
    - undefined

  # TODO: Simplify heading/rotation
  # Set initial rotation using heading
  # Currently, moveLeft & moveRight in rover.js
  # fight with adding that to the setter of heading
  - setProperty:
    - rover
    - heading
    - 0
  - setProperty:
    - rover
    - rotation
    - [ 0, 0, 1, 0 ]

  - addToInventory:
    - rover/cargo
    - [ "radio" ]

  - addToGrid:
    - rover
    - [ 15, 1 ]

  - createGraph:

  - addToGrid:
    - blocklyGraph
    - [ 15, 1 ]

  triggers:
    failOnMove:
      triggerCondition:
      - onMoved:
        - rover
      actions:
      - hideBlockly:
      - scenarioFailure:
        - lost
        - "You need to plot the course of the wayward rover before going to find it."
      - playSound:
        - musicFailure
      - stopSound:
        - musicSuccess
      - stopSound:
        - musicStandardGameplay

    succeedOnSuccessfulCoursePlot:
      triggerCondition:
      - and:
        - blocklyLineEval:
          - [ 10, -5 ]
        - blocklyLineEval:
          - [ -16, 8 ]
      actions:
      - hideBlockly:
      - scenarioSuccess:
        - "Course plotted!  Now to find the little guy."
      - playSound:
        - musicSuccess
      - stopSound:
        - musicFailure
      - stopSound:
        - musicStandardGameplay

    blinkGraphTab:
      triggerCondition:
      - onScenarioStart:
      actions:
      - waitForNode:
        - graph
        - blinkBlocklyTab:
          - graph

    stopBlinkGraphTab:
      triggerCondition:
      - or:
        - onBlocklyWindowOpened:
          - graph
        - onScenarioChanged:
      actions:
      - stopBlinkBlocklyTab:
        - graph

    playStartingSounds:
      triggerCondition:
      - onScenarioStart:
      actions:
      - playSound:
        - musicStandardGameplay

    playStartingVO:
      triggerCondition:
      - onScenarioStart:
      additionalCondition:
      - and:
        - not:
          - readBlackboard:
            - L2VO1
        - doOnce:
      actions:
      - playSound:
        - L2VO1_Control
      - delay:
        - 0.5
        - playSound:
          - L2VO2_Rover
      - writeToBlackboard:
        - L2VO1

    playL2VO3_Rover:
      triggerCondition:
      - onBlocklyWindowOpened:
        - graph
      additionalCondition:
      - and:
        - not:
          - readBlackboard:
            - L2VO3
        - doOnce:
      actions:
      - playSound:
        - L2VO3_Rover
      - writeToBlackboard:
        - L2VO3

children:
  grid:
    extends: source/grid.vwf
    properties:
      minX: 0
      maxX: 16
      minY: 0
      maxY: 16
      gridOriginInSpace: [ -45, 39 ]
      gridSquareLength: 3
      boundaryValues:
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]