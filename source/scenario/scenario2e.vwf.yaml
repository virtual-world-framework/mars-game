---
extends: source/scenario/scenario.vwf
properties:
  scenarioName: scenario2e

  scenePath: /
  nextScenarioPath: "scenario2f"
  blockly: assets/scenario/scenario2e.xml

  startState:
  - setProperty:
    - rover
    - battery
    - 5000
  - setProperty:
    - rover
    - batteryMax
    - 5000
  - setProperty:
    - rover
    - blockly_allowedBlocks
    - 30
  - setProperty:
    - rover
    - heading
    - 0
  - setProperty:
    - rover
    - rotation
    - [ 0, 0, 1, 0 ]
  - addToInventory:
    - rover/cargo
    - [ "helicam", "battery", "radio" ]
  - addToGrid:
    - rover
    - [ 15, 1 ]
  - addToGrid:
    - blocklyGraph
    - [ 15, 1 ]

children:
  triggerManager:
    extends: source/triggers/triggerManager.vwf
    properties: 
      triggers:
        beginScenario_2e:
          triggerCondition:
          - onScenarioStart:
          actions:
          - playSound:
            - musicStandardGameplay
          - waitForNode:
            - rover
            - blinkBlocklyTab:
              - rover

        succeedOnSuccessfulMovement_2e:
          triggerCondition:
          - onBlocklyStopped:
            - rover
          additionalCondition:
          - and:
            - isAtPosition:
              - rover
              - 13
              - 2
            - hasHeading:
              - rover
              - 0
          actions:
          - scenarioSuccess:
          - showAlert:
            - "I found the right rise and run of the path!"
          - stopSound:
            - musicStandardGameplay
          - playSound:
            - musicSuccessShort
          - playSound:
            - L3VO9_Control

        stopBlinkRoverTab_2e:
          triggerCondition:
          - or:
            - onBlocklyWindowOpened:
              - rover
            - onScenarioChanged:
          actions:
          - stopBlinkBlocklyTab:
            - rover

  grid:
    includes: source/grid.vwf
    properties:
      minX: 0
      maxX: 16
      minY: 0
      maxY: 16
      gridOriginInSpace: [ -45, 39 ]
      gridSquareLength: 3
      boundaryValues:
      - [ -3, -3, -3, -3, -3, -3, -3,  1,  1,  1,  1, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3, -3, -3,  1,  1,  1, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3, -3,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3, -3,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3, -3,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3,  1,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3,  1,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]