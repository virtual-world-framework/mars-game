---
extends: source/scenario/scenario.vwf
properties:
  scenarioName: scenario1h

  nextScenarioPath: "scenario2a"

  startState:
  - setProperty:
    - rover
    - battery
    - 20
  - setProperty:
    - rover
    - batteryMax
    - 30
  - setProperty:
    - rover
    - blockly_allowedBlocks
    - 20
  - setProperty:
    - rover
    - lowRam
    - 5    

  # TODO: Simplify heading/rotation
  # Set initial rotation using heading
  # Currently, moveLeft & moveRight in rover.js
  # fight with adding that to the setter of heading
  - setProperty:
    - rover
    - heading
    - 180
  - setProperty:
    - rover
    - rotation
    - [ 0, 0, 1, 180 ]

  - addToInventory:
    - rover/cargo
    - [ "helicam", "battery" ]

  - addToGrid:
    - rover
    - [ 8, 2 ]

  - addToGrid:
    - radio
    - [ 8, 16 ]
  - enableBlocklyTabs:
    - rover
  - loadToolbox:
    - rover
    - assets/scenario/scenario1h.xml

children:
  triggerManager:
    extends: source/triggers/triggerManager.vwf
    properties: 
      triggers:
        beginScenario_1h:
          triggerCondition:
          - onScenarioStart:
          actions:
          - playSound:
            - musicStandardGameplay

        playStartingVO_1h:
          triggerCondition:
          - onScenarioStart:
          additionalCondition:
          - not:
            - readBlackboard:
              - Level1hStartSounds
          actions:
          - playSound:
            - L1VO16_Rover
          - writeToBlackboard:
            - Level1hStartSounds

        succeedOnSuccess_1h:
          triggerCondition:
          - onBlocklyStopped:
            - rover
          additionalCondition:
          - and:
            - isAtPosition:
              - rover
              - 8
              - 16
            - not:
              - readBlackboard:
                - hasFailed
          actions:
          - scenarioSuccess:
            - levelComplete
          - showAlert:
            - "You have picked up the radio!"
          - clearBlockly:      
          - stopSound:
            - musicStandardGameplay
          - playSound:
            - musicSuccess
          - delay:
            - 5
            - playSound:
              - SCVO4_Rover
            - playSound:
              - L1VO10_Control_E
          - delay:
            - 20
            - showStatus:
              - "Click to continue!"
          - playVideo:
            - "success_cinematic.mp4"          

        playHint1_1h:
          triggerCondition:
          - delay:
            - 20
          additionalCondition:
          - and:
            - not:
              - readBlackboard:
                - Level1hHint1
            - not:
              - readBlackboard:
                - hasSucceeded
            - not:
              - readBlackboard:
                - hasFailed
          actions:
          - playSound:
            - ALVO22_Rover
          - writeToBlackboard:
            - Level1hHint1

        panToRadio_1h:
          triggerCondition:
          - delay:
            - 2
          actions:
          - panCamera:
            - /pickups/radio

        panToRover_1h:
          triggerCondition:
          - delay:
            - 5
          actions:
          - panCamera:
            - /player/rover

        setCameraView:
          triggerCondition:
          - onBlocklyStarted:
            - rover
          actions:
          - setCinematicCameraView:
            - [ 13, 15, -15 ]

  grid:
    includes: source/grid.vwf
    properties:
      minX: 0
      maxX: 16
      minY: 0
      maxY: 18
      gridOriginInSpace: [ -24, -6 ]
      gridSquareLength: 3
      boundaryValues:
      - [ -1, -1, -1,  1,  1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1 ]
      - [  1, -1, -1,  1,  1,  1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1 ]
      - [  1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1, -1,  1,  1, -1,  1,  1,  1 ]
      - [  1, -1,  1,  1,  1,  1,  1,  1,  1,  1, -1,  1,  1,  1, -1,  1,  1,  1 ]
      - [  1,  1,  1,  1, -1, -1, -1, -1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1, -1, -1, -1, -1,  1,  1,  1, -1, -1, -1, -1, -1,  1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1,  1,  1 ]
      - [ -1, -1,  1, -1, -1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1,  1,  1 ]
      - [ -1,  1,  1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [ -1, -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1,  1,  1,  1,  1,  1 ]
      - [  1, -1,  1, -1, -1,  1,  1,  1,  1,  1, -1, -1, -1,  1,  1,  1,  1, -1 ]
      - [  1, -1,  1, -1, -1,  1,  1, -1, -1,  1,  1, -1,  1,  1,  1,  1, -1, -1 ]
      - [  1,  1,  1,  1,  1,  1, -1, -1, -1,  1,  1,  1,  1,  1,  1, -1, -1, -1 ]
      - [ -1, -1,  1,  1,  1,  1, -1, -1, -1, -1,  1,  1,  1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1,  1, -1, -1, -1 ]
