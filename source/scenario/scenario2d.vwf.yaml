---
extends: source/scenario/scenario.vwf
properties:
  scenarioName: scenario2d

  scenePath: /
  nextScenarioPath: "scenario2e"
  blockly: assets/scenario/scenario2d.xml

  startState:
  - setProperty:
    - rover
    - battery
    - 50
  - setProperty:
    - rover
    - batteryMax
    - 50
  - setProperty:
    - rover
    - blockly_allowedBlocks
    - 30
  - setProperty:
    - rover
    - heading
    - 0
  - setProperty:
    - rover
    - rotation
    - [ 0, 0, 1, 0 ]
  - addToInventory:
    - rover/cargo
    - [ "helicam", "battery", "radio" ]
  - addToGrid:
    - rover
    - [ 15, 1 ]
  - addToGrid:
    - blocklyGraph
    - [ 15, 1 ]

children:
  triggerManager:
    extends: source/triggers/triggerManager.vwf
    properties: 
      triggers:
        beginScenario_2d:
          triggerCondition:
          - onScenarioStart:
          actions:
          - playSound:
            - musicStandardGameplay

        failOnMove_2d:
          triggerCondition:
          - onMoved:
            - rover
          actions:
          - scenarioFailure:
            - lost
            - "You need to plot the course of the wayward rover before going to find it."

        succeedOnSuccessfulCoursePlot_2d:
          triggerCondition:
          - and:
            - blocklyLineEval:
              - [ 10, -5 ]
            - blocklyLineEval:
              - [ -16, 8 ]
          actions:
          - scenarioSuccess:
          - showAlert:
            - "Course plotted! Now to find the little guy."
          - hideBlockly:
          - stopSound:
            - musicStandardGameplay
          - playSound:
            - musicSuccess
          - playSound:
            - L3VO7_Control

        playHint1_2d:
          triggerCondition:
          - delay:
            - 30
          additionalCondition:
          - and:
            - not:
              - readBlackboard:
                - Level2dHint1
            - not:
              - readBlackboard:
                - Level2dHint2
            - not:
              - readBlackboard:
                - Level2dHint3
            - not:
              - readBlackboard:
                - hasSucceeded
            - not:
              - readBlackboard:
                - hasFailed
          actions:
          - writeToBlackboard:
            - Level2dHint1
          - playSound:
            - ALVO2_Rover

        playHint2_2d:
          triggerCondition:
          - delay:
            - 60
          additionalCondition:
          - and:
            - not:
              - readBlackboard:
                - Level2dHint2
            - not:
              - readBlackboard:
                - Level2dHint3
            - not:
              - readBlackboard:
                - hasSucceeded
            - not:
              - readBlackboard:
                - hasFailed
          actions:
          - writeToBlackboard:
            - Level2dHint2
          - playSound:
            - ALVO3_Rover

        playHint3_2d:
          triggerCondition:
          - delay:
            - 90
          additionalCondition:
          - and:
            - not:
              - readBlackboard:
                - Level2dHint3
            - not:
              - readBlackboard:
                - hasSucceeded
            - not:
              - readBlackboard:
                - hasFailed
          actions:
          - writeToBlackboard:
            - Level2dHint3
          - playSound:
            - ALVO5_Rover

  grid:
    includes: source/grid.vwf
    properties:
      minX: 0
      maxX: 16
      minY: 0
      maxY: 16
      gridOriginInSpace: [ -45, 39 ]
      gridSquareLength: 3
      boundaryValues:
      - [ -3, -3, -3, -3, -3, -3, -3,  1,  1,  1,  1, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3, -3, -3,  1,  1,  1, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3, -3,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3, -3,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3, -3,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3, -3,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3, -3,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3, -3, -3,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3,  1,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3,  1,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3,  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [ -3,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]
      - [  1,  1,  1,  1, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 ]