---
extends: source/scenario/scenario.vwf
properties:
  scenarioName: scenario1

  scenePath: /
  nextScenarioPath: "scenario2"
  blockly: assets/scenario/scenario1.xml

  startState:
  - setProperty:
    - rover
    - battery
    - 30
  - setProperty:
    - rover
    - batteryMax
    - 50
  - setProperty:
    - rover
    - blockly_allowedBlocks
    - 30

  # TODO: Simplify heading/rotation
  # Set initial rotation using heading
  # Currently, moveLeft & moveRight in rover.js
  # fight with adding that to the setter of heading
  - setProperty:
    - rover
    - heading
    - 0
  - setProperty:
    - rover
    - rotation
    - [ 0, 0, 1, 0 ]

  - emptyInventory:
    - rover/cargo

  - addToGrid:
    - rover
    - [ 8, 2 ]

  - addToGrid:
    - radio
    - [ 8, 16 ]

  triggers:
    succeedOnSuccess:
      triggerCondition:
      - onBlocklyStopped:
        - rover
      additionalCondition:
      - and:
        - isAtPosition:
          - rover
          - 8
          - 16
        - hasObject:
          - rover
          - radio
      actions:
      - hideBlockly:
      - scenarioSuccess:
        - "You have picked up the radio!"
      - playSound:
        - L1VO6_Control
      - playSound:
        - musicSuccess
      - stopSound:
        - musicFailure
      - stopSound:
        - musicStandardGameplay

    failOnCollision:
      triggerCondition:
      - moveFailed:
        - rover
        - collision
      actions:
      - hideBlockly:
      - writeToBlackboard:
        - hasFailed
      - scenarioFailure:        
        - collision
      - playSound:
        - musicFailure
      - stopSound:
        - musicSuccess
      - stopSound:
        - musicStandardGameplay

    failOnBatteryDepleted:
      triggerCondition:
      - moveFailed:
        - rover
        - battery
      actions:
      - hideBlockly:
      - writeToBlackboard:
        - hasFailed
      - scenarioFailure:         
        - battery
      - playSound:
        - musicFailure
      - stopSound:
        - musicSuccess
      - stopSound:
        - musicStandardGameplay

    failOnIncompleteProgram:
      triggerCondition:
      - onBlocklyStopped:
      additionalCondition:
      - and:
        - not:
          - and:
            - isAtPosition:
              - rover
              - 8
              - 16
            - hasObject:
              - rover
              - radio
        - not:
          - readBlackboard:
            - hasFailed
      actions:
      - hideBlockly:
      - writeToBlackboard:
        - hasFailed
      - scenarioFailure:
        - incomplete
      - playSound:
        - musicFailure
      - stopSound:
        - musicSuccess
      - stopSound:
        - musicStandardGameplay

    resetFailure:
      triggerCondition:
      - onScenarioStart:
      actions:
      - clearBlackboard:
        - hasFailed

    blinkBlocklyIcon:
      triggerCondition:
      - onScenarioStart:
      actions:
      - blinkHUDElement:
        - blocklyButton

    stopBlinkBlocklyIcon:
      triggerCondition:
      - or:
        - onBlocklyWindowOpened:
        - onScenarioChanged:
      actions:
      - stopBlinkHUDElement:
        - blocklyButton

    stopIntroMusic:
      triggerCondition:
      - onScenarioStart:
      additionalCondition:
      - not:
        - readBlackboard:
          - musicStoryScreen
      actions:
      - stopSound:
        - musicStoryScreen
      - playSound:
        - environmentWind
      - writeToBlackboard:
        - musicStoryScreen

    playStartingSounds:
      triggerCondition:
      - onScenarioStart:
      actions:
      - playSound:
        - musicStandardGameplay

    playL1VO1_Rover:
      triggerCondition:
      - onScenarioStart:
      additionalCondition:
      - and:
        - not:
          - readBlackboard:
            - L1VO1
        - doOnce:
      actions:
      - playSound:
        - L1VO1_Rover
      - writeToBlackboard:
        - L1VO1

    playL1VO2_Rover:
      triggerCondition:
      - onBlocklyWindowOpened:
      additionalCondition:
      - and:
        - not:
          - readBlackboard:
            - L1VO2
        - doOnce:
      actions:
      - playSound:
        - L1VO2_Rover
      - writeToBlackboard:
        - L1VO2

    playL1VO3_Rover:
      triggerCondition:
      - onBlocklyProgramChanged:
        - rover
        - add
        - rover_moveForward
      additionalCondition:
      - and:
        - not:
          - readBlackboard:
            - L1VO3
        - doOnce:
      actions:
      - playSound:
        - L1VO3_Rover
      - writeToBlackboard:
        - L1VO3

    playALVO8_Rover:
      triggerCondition:
      - onBlocklyProgramChanged:
        - rover
        - add
        - rover_turn
      additionalCondition:
      - and:
        - not:
          - readBlackboard:
            - ALVO8
        - doOnce:
      actions:
      - playSound:
        - ALVO8_Rover
      - writeToBlackboard:
        - ALVO8

    playL1VO5_Rover:
      triggerCondition:
      - onMoved:
        - rover
      additionalCondition:
      - and:
        - not:
          - readBlackboard:
            - L1VO5
        - doOnce:
      actions:
      - playSound:
        - L1VO5_Rover
      - writeToBlackboard:
        - L1VO5

    startRoverSounds:
      triggerCondition:
      - onBlocklyStarted:
        - rover
      actions:
      - playSound:
        - roverSounds

    stopRoverSounds:
      triggerCondition:
      - onBlocklyStopped:
        - rover
      actions:
      - stopSound:
        - roverSounds

children:
  grid:
    extends: source/grid.vwf
    properties:
      minX: 0
      maxX: 16
      minY: 0
      maxY: 18
      gridOriginInSpace: [ -24, -6 ]
      gridSquareLength: 3
      boundaryValues:
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1,  1,  1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1 ]
      - [ -1, -1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1,  1,  1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1,  1,  1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1 ]
      - [ -1, -1,  1, -1, -1, -1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1, -1 ]
      - [ -1, -1,  1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1,  1,  1,  1, -1 ]
      - [ -1, -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1,  1,  1,  1,  1, -1 ]
      - [ -1, -1,  1, -1, -1,  1,  1,  1,  1,  1, -1, -1,  1,  1,  1,  1,  1, -1 ]
      - [ -1, -1,  1, -1, -1,  1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1, -1, -1 ]
      - [ -1, -1,  1,  1,  1,  1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1,  1,  1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ]
