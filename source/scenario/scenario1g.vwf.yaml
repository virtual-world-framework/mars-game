---
extends: source/scenario/scenario.vwf
properties:
  scenarioName: scenario1g

  nextScenarioPath: "scenario1h"
  blockly: assets/scenario/scenario1g.xml

  startState:
  - setProperty:
    - rover
    - battery
    - 4
  - setProperty:
    - rover
    - batteryMax
    - 30
  - setProperty:
    - rover
    - blockly_allowedBlocks
    - 3
  - setProperty:
    - rover
    - lowRam
    - 1    

  # TODO: Simplify heading/rotation
  # Set initial rotation using heading
  # Currently, moveLeft & moveRight in rover.js
  # fight with adding that to the setter of heading
  - setProperty:
    - rover
    - heading
    - 180
  - setProperty:
    - rover
    - rotation
    - [ 0, 0, 1, 180 ]

  - addToInventory:
    - rover/cargo
    - [ "helicam", "battery" ]

  - addToGrid:
    - rover
    - [ 8, 6 ]

  - addToGrid:
    - radio
    - [ 8, 16 ]

children:
  triggerManager:
    extends: source/triggers/triggerManager.vwf
    properties: 
      triggers:
        beginScenario_1g:
          triggerCondition:
          - onScenarioStart:
          actions:
          - playSound:
            - musicStandardGameplay

        playStartingVO_1g:
          triggerCondition:
          - onScenarioStart:
          additionalCondition:
          - not:
            - readBlackboard:
              - Level1gStartSounds
          actions:
          - playSound:
            - L1VO15_Rover
          - writeToBlackboard:
            - Level1gStartSounds

        succeedOnSuccess_1g:
          triggerCondition:
          - onBlocklyStopped:
            - rover
          additionalCondition:
          - and:
            - isAtPosition:
              - rover
              - 8
              - 2
            - hasHeading:
              - rover
              - 180
            - not:
              - readBlackboard:
                - hasFailed
          actions:
          - scenarioSuccess:
          - showAlert:
            - "Now I can get out of this ditch and find the radio!"
          - clearBlockly:
          - stopSound:
            - musicStandardGameplay
          - playSound:
            - SCVO3_Rover
          - playSound:
            - musicSuccessShort

        # TODO: Add hint VO

  grid:
    includes: source/grid.vwf
    properties:
      minX: 0
      maxX: 16
      minY: 0
      maxY: 18
      gridOriginInSpace: [ -24, -6 ]
      gridSquareLength: 3
      boundaryValues:
      - [ -1, -1, -1,  1,  1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1 ]
      - [  1, -1, -1,  1,  1,  1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1 ]
      - [  1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1,  1,  1,  1,  1,  1 ]
      - [  1, -1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1,  1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1, -1, -1, -1, -1,  1,  1,  1, -1, -1,  1,  1,  1,  1,  1 ]
      - [  1,  1,  1,  1, -1, -1, -1, -1,  1,  1,  1, -1, -1, -1, -1, -1, -1,  1 ]
      - [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1,  1 ]
      - [ -1, -1,  1, -1, -1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1,  1 ]
      - [ -1,  1,  1,  1,  1,  1,  1,  1, -1,  1,  1,  1,  1,  1,  1,  1,  1,  1 ]
      - [ -1, -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1,  1,  1,  1,  1, -1 ]
      - [  1, -1,  1, -1, -1,  1,  1,  1,  1,  1, -1, -1, -1,  1,  1,  1, -1, -1 ]
      - [  1, -1,  1, -1, -1,  1, -1, -1, -1,  1,  1, -1,  1,  1,  1,  1, -1, -1 ]
      - [  1,  1,  1,  1,  1,  1, -1, -1, -1,  1,  1,  1,  1,  1,  1, -1, -1, -1 ]
      - [ -1, -1,  1,  1,  1,  1, -1, -1, -1, -1,  1,  1,  1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1,  1, -1, -1, -1 ]
