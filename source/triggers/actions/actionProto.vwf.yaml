# Copyright 2014 Lockheed Martin Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may 
# not use this file except in compliance with the License. You may obtain 
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and 
# limitations under the License.

# A generated object prototype for actions. 

--- 

extends: ../generators/generatedObject.vwf

implements: 
  - http://vwf.example.com/sceneGetter.vwf
  - http://vwf.example.com/assert.vwf

properties:
  # If this trigger belongs to a particular scenario, this will be that 
  #   scenario. If it's a global trigger, it will be the current scenario.
  # NOTE: initialized in initAction.
  scenario:
    get: |
      // this.assert( this.scene && this.scene.getCurrentScenario );
      if ( this.scenario ) {
        return this.scenario;
      } else if ( this.scene && this.scene.getCurrentScenario ) {
        return this.scene.getCurrentScenario();
      } else {
        return undefined;
      }
      //@ sourceURL=source/triggers/actions/actionProto/scenario/get

methods:
  # This function should be called by every trigger object from inside of 
  #   onGenerated.  It handles shared parts of the initialization.  Arguments 
  #   are the same as onGenerated.
  # NOTE: this handles calling initAction for you.
  initAction:

  # Checks whether we're still in the scenario that owns this trigger.  For 
  #   global scenarios, this will always be true.
  isInScenario:

  # This is the function that actually gets called when the trigger fires. 
  #   Must be implemented by the child action.
  executeAction: 

scripts:
- source: actionProto.js