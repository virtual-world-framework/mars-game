# The Mars educational game created for ADL's True Game-based learning project
--- 
extends: http://vwf.example.com/scene.vwf
implements:
- "http://vwf.example.com/blockly/manager.vwf"
properties:
  enableShadows: true
  ambientColor: [ 60, 50, 50 ]
  userObject: null
  blockly_autoClose: false
methods:
  checkForSuccess:
events:
  scenarioSucceeded:
  scenarioFailed:
children:
  soundManager:
<<<<<<< HEAD
    extends: http://vwf.example.com/sound/soundManager.vwf
=======
    extends: source/marsGameSound.vwf # http://vwf.example.com/sound/soundManager.vwf
>>>>>>> FETCH_HEAD
  environment:
    extends: http://vwf.example.com/node3.vwf
    children:
      craterWalls:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/crater_walls.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
      cratersSmall:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/craters_small.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
      dirt:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/dirt.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
      rocksInMazeGrooves:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/ground_rocks_terrain.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
      cracks:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/mars_ground_cracks.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
      hills:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/mars_hills.dae
        type: model/vnd.collada+xml
      mountains:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/mars_mountains.dae
        type: model/vnd.collada+xml
      rocks:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/rocks.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
      brownRocks:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/rocks_brown.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
      longRocks:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/rocks_long.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
      terrain:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/terrain.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
      crash_grooves:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/crash_grooves.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
      rubble:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Rubble/rubble.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
  boundaryMap:
    extends: source/boundaryMap.vwf
    properties:
      topLeft: [ -10.5, 25.5 ]
      gridSquareLength: 3
      map:
      - [ -1, -1, -1, -1, -1, -1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1,  1,  1,  1,  1,  1,  2,  2,  4, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1,  1, -1, -1, -1,  4, -1,  2, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1,  1, -1, -1, -1,  4, -1,  2, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1,  1,  1,  1, -1,  4, -1,  1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1,  1, -1,  4, -1,  1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1,  1,  1,  1,  1, -1,  2, -1,  1, -1, -1, -1, -1, -1, -1 ]
      - [ -1, -1, -1, -1, -1,  1, -1,  2, -1,  1,  1,  1,  1,  1, -1, -1 ]
      - [ -1, -1, -1,  1,  1,  1, -1,  2, -1,  1, -1, -1, -1,  1, -1, -1 ]
      - [ -1, -1, -1,  1, -1, -1, -1,  2, -1,  1, -1, -1, -1,  1,  1,  1 ]
      - [ -1, -1, -1,  1, -1, -1, -1,  2,  1,  1, -1, -1, -1,  1, -1, -1 ]
      - [  1,  2,  2,  1, -1, -1, -1,  2, -1, -1, -1, -1, -1,  2, -1, -1 ]
      - [  1, -1, -1,  1, -1, -1, -1,  2, -1, -1, -1, -1, -1,  2, -1, -1 ]
      - [  1, -1, -1,  1, -1, -1, -1,  2, -1, -1, -1, -1, -1,  2, -1, -1 ]
      - [ -1, -1, -1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1,  2, -1, -1 ]
  booleanFunctionFactory:
    extends: source/booleanFunctionFactory.vwf
  sunLight:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "directional"
      color: [ 255, 245, 230 ]
      translation: [ 32, 16, 256 ]
      rotation: [ -0.8206275701522827, -0.3142601549625397, 0.4772954285144806, 77.48947143554688 ]
      intensity: 0.75
      castShadows: true
      shadowDarkness: 0.7
      shadowCameraBottom: -1024
      shadowCameraTop: 1024
      shadowCameraLeft: -1024
      shadowCameraRight: 1024
      shadowCameraFar: 512
      shadowMapWidth: 2048
      shadowMapHeight: 2048
      shadowBias: 0
  envLight:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "hemisphere"
      translation: [ 0, 0, 100 ]
      color: [ 255, 175, 100 ]
      groundColor: [ 200, 160, 100 ]
      intensity: 0.5
  player:
    extends: http://vwf.example.com/node3.vwf
    methods:
      initializeEventHandlers:
      togglePerspective:
      setRoverVisible:
    children:
      camera:
        extends: http://vwf.example.com/camera.vwf
        implements: [ "http://vwf.example.com/navigable.vwf" ]
        properties:
          navmode: walk
          translationSpeed: 0
          translation: [ 0, 0, 1 ]
          rotation: [ 0, 0, 1, 270 ]
          far: 100000
          pointOfView:
            set: |
              this.changePointOfView$( value );
            value: thirdPerson
          targetPath:
            set: |
              this.setTargetPath$( value );
            value: "/player/rover"
          firstPersonOffset: [ 0, 0, 1 ]
          thirdPersonOffset: [ -15.531,  0,  5.553 ]
          topDownOffset: [ 0, 0, 100 ]
          needToSetupEventHandler$: false
        methods:
          onSceneReady$:
          changePointOfView$:
          setTargetPath$:
          followTarget$:
        scripts:
        - source: "source/camera.js"
      rover:
        extends: source/rover.vwf
        implements: [ "http://vwf.example.com/blockly/controller.vwf" ]
        source: assets/3d/Rover/rover_retro.dae
        type: model/vnd.collada+xml
        properties:
          rotation: [ 0, 0, 1, 270 ]
          castShadows: true
          receiveShadows: true
          currentGridSquare: [ 2, 7 ]
          heading: 270
          terrainName: "environment"
        children:
          cargo:
            extends: source/inventory.vwf
            properties:
              capacity: 4
              inventoryIsVisible: false
    scripts:
     - source: source/player.js
  minirover:
    extends: source/rover.vwf
    implements: [ "http://vwf.example.com/blockly/controller.vwf" ]
    source: assets/3d/minirover/minirover.dae
    type: model/vnd.collada+xml
    properties:
      translation: [ 0, 9, 0 ]
      rotation: [ 0, 0, 1, 270 ]
      castShadows: true
      receiveShadows: true
      blocklyEnabled: false
      currentGridSquare: [ 2, 10 ]
      heading: 270
      terrainName: "environment"
  pickups:
    extends: http://vwf.example.com/node3.vwf
    children:
      radio:
        extends: http://vwf.example.com/node3.vwf
        implements: [ "source/inventoriable.vwf" ]
        source: assets/3d/Radio/radio.DAE
        type: model/vnd.collada+xml
        properties:
          iconSrc: "../assets/images/radio.png"
          translation: [ 39, 0, 0 ]
          animationLoop: true
          currentGridSquare: [ 15, 7 ]
        scripts: |
          this.initialize = function() {
            this.animationPlay();
          }
  debris:
    extends: http://vwf.example.com/node3.vwf
    properties:
      translation: [ 0, 6, -0.721 ]
    children:
      bubble_lander:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/bubble_lander.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 34.956, 48.886, -0.836 ]
      bubble_lander_open:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/bubble_lander_open.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ -15.048, -6.203, 0.456 ]
      o2_tank_1:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/o2_tank.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ -2.876, -8, 1 ]
      o2_tank_2:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/o2_tank.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ -2.147, -8.03, 1 ]
      o2_tank_3:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/o2_tank.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 12.268, 1.487, -0.5 ]
      o2_tank_4:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/o2_tank.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 12.329, 1.781, -0.75 ]
      parachute:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/parachute.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 65.902, 12.382, 0.649 ]
      parachute2:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/parachute2.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ -9.69, 7.92, 0.456 ]
      quadcon_storage_container_1:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/quadcon_storage_container.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 5.342, -21.799, 1.825 ]
      quadcon_storage_container_2:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/quadcon_storage_container.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 30.058, -2.851, -1 ]
      quadcon_storage_container_3:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/quadcon_storage_container.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 66.139, 13.462, 0.224 ]
      ram:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Debris_Field/ram.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 23.915, 17.35, 0.382 ]
  scenario1:
    extends: source/scenario1.vwf
  blocklyLine:
    extends: http://vwf.example.com/graphline.vwf
    properties:
      lineFunction: undefined
      startValue: 0
      endValue: 40
      pointCount: 200
      color: [ 100, 255, 100 ]
      lineThickness: 0.15
      visible: false
scripts: 
 - source: source/scene.js
