# The Mars educational game created for ADL's True Game-based learning project
--- 
extends: http://vwf.example.com/scene.vwf
implements:
- "http://vwf.example.com/blockly/manager.vwf"
properties:
  enableShadows: true
  ambientColor: [ 150, 140, 140 ]
  userObject: null
  blockly_autoClose: false
  activeScenarioPath:
    set: |
      this.setScenario( value );
      this.activeScenarioPath = value;
    value: "scenario1"
methods:
  setScenario:
  resetScenario:
  advanceScenario:
  getCurrentScenario:
  createGraph:
  removeGraph:
  createMiniRover:
  removeMiniRover:
events:
  scenarioReset:
  scenarioChanged:
children:
  soundManager:
    extends: http://vwf.example.com/sound/soundManager.vwf
  environment:
    extends: http://vwf.example.com/node3.vwf
    source: assets/3d/Terrain/scene.dae
    type: model/vnd.collada+xml
    properties:
      castShadows: true
      receiveShadows: true
  backdrop:
    extends: http://vwf.example.com/node3.vwf
    source: assets/3d/Terrain/backdrop.dae
    type: model/vnd.collada+xml
  booleanFunctionFactory:  # Does this belong to be exposed here?
    extends: source/triggers/booleanFunctionFactory.vwf
  sunLight:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "directional"
      color: [ 255, 245, 230 ]
      translation: [ 32, 16, 256 ]
      rotation: [ -0.8206275701522827, -0.3142601549625397, 0.4772954285144806, 77.48947143554688 ]
      intensity: 0.75
      castShadows: true
      shadowDarkness: 0.7
      shadowCameraBottom: -1024
      shadowCameraTop: 1024
      shadowCameraLeft: -1024
      shadowCameraRight: 1024
      shadowCameraFar: 512
      shadowMapWidth: 2048
      shadowMapHeight: 2048
      shadowBias: 0
  envLight:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "hemisphere"
      translation: [ 0, 0, 100 ]
      color: [ 255, 200, 175 ]
      groundColor: [ 200, 160, 80 ]
      intensity: 0.65
  player:
    extends: http://vwf.example.com/node3.vwf
    methods:
      initializeEventHandlers:
      togglePerspective:
      setRoverVisible:
    children:
      camera:
        extends: http://vwf.example.com/camera.vwf
        implements: [ "http://vwf.example.com/navigable.vwf" ]
        properties:
          navmode: walk
          translationSpeed: 0
          translation: [ 0, 0, 1 ]
          rotation: [ 0, 0, 1, 270 ]
          far: 100000
          pointOfView:
            set: |
              this.changePointOfView$( value );
            value: thirdPerson
          targetPath:
            set: |
              this.setTargetPath$( value );
            value: "/player/rover"
          firstPersonOffset: [ 0, 0, 1 ]
          thirdPersonOffset: [ -15.531,  0,  5.553 ]
          topDownOffset: [ 0, 0, 60 ]
          needToSetupEventHandler$: false
        methods:
          onSceneReady$:
          changePointOfView$:
          setTargetPath$:
          followTarget$:
        scripts:
        - source: "source/camera.js"
      rover:
        extends: source/rover.vwf
        implements: [ "http://vwf.example.com/blockly/controller.vwf", "source/griddable.vwf" ]
        source: assets/3d/Rover/rover_retro.dae
        type: model/vnd.collada+xml
        properties:
          castShadows: true
          receiveShadows: true
          terrainName: "environment"
        children:
          cargo:
            extends: source/inventory.vwf
            properties:
              capacity: 4
              inventoryIsVisible: false
    scripts:
     - source: source/player.js
  pickups:
    extends: http://vwf.example.com/node3.vwf
    children:
      radio:
        extends: http://vwf.example.com/node3.vwf
        implements: [ "source/inventoriable.vwf", "source/griddable.vwf" ]
        source: assets/3d/Radio/radio.DAE
        type: model/vnd.collada+xml
        properties:
          iconSrc: "../assets/images/radio.png"
          animationLoop: true
          isCollidable: false
          terrainName: "environment"
        scripts: |
          this.initialize = function() {
            this.animationPlay();
          }
  # debris:
  #   extends: http://vwf.example.com/node3.vwf
  #   properties:
  #     translation: [ 0, 6, -0.721 ]
  #   children:
  #     bubble_lander:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/bubble_lander.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ 34.956, 48.886, -0.836 ]
  #     bubble_lander_open:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/bubble_lander_open.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ -15.048, -6.203, 0.456 ]
  #     o2_tank_1:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/o2_tank.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ -2.876, -8, 1 ]
  #     o2_tank_2:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/o2_tank.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ -2.147, -8.03, 1 ]
  #     o2_tank_3:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/o2_tank.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ 12.268, 1.487, -0.5 ]
  #     o2_tank_4:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/o2_tank.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ 12.329, 1.781, -0.75 ]
  #     parachute:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/parachute.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ 65.902, 12.382, 0.649 ]
  #     parachute2:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/parachute2.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ -9.69, 7.92, 0.456 ]
  #     quadcon_storage_container_1:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/quadcon_storage_container.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ 5.342, -21.799, 1.825 ]
  #     quadcon_storage_container_2:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/quadcon_storage_container.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ 30.058, -2.851, -1 ]
  #     quadcon_storage_container_3:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/quadcon_storage_container.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ 66.139, 13.462, 0.224 ]
  #     ram:
  #       extends: http://vwf.example.com/node3.vwf
  #       source: assets/3d/Debris_Field/ram.dae
  #       type: model/vnd.collada+xml
  #       properties:
  #         translation: [ 23.915, 17.35, 0.382 ]
  scenario1:
    extends: source/scenario1.vwf
  blocklyLine:
    extends: http://vwf.example.com/graphline.vwf
    properties:
      lineFunction: undefined
      startValue: 0
      endValue: 40
      pointCount: 200
      color: [ 100, 255, 100 ]
      lineThickness: 0.15
      visible: false
scripts: 
 - source: source/scene.js
