# Copyright 2014 Lockheed Martin Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may 
# not use this file except in compliance with the License. You may obtain 
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and 
# limitations under the License.

--- 
extends: http://vwf.example.com/scene.vwf
implements:
- "http://vwf.example.com/blockly/manager.vwf"
properties:
  ambientColor: [ 150, 140, 140 ]
  userObject: null
  blockly_autoClose: false
  activeScenarioPath:
    set: |
      this.setScenario( value );
      this.activeScenarioPath = value;
    value: "mainMenuScenario"
  playerId: "test"
  version: 1.0
  sceneBlackboard: {}
  activeBlocklyXML: undefined
methods:
  setScenario:
  resetScenario:
  advanceScenario:
  getCurrentScenario:
  getScenarios:
  getScenarioPaths:
  createGridDisplay:
  addStatus:
  addAlert:
  addSubtitle:
  executeBlock:
  displayTiles:
  displayGraph:
  setCinematicView:
  resetView:
  restartGame:
  attemptLogin:
  setAnimationRate:
events:
  gameStarted:
  scenarioReset:
  scenarioChanged:
  scenarioStarted:
  scenarioSucceeded:
  scenarioFailed:
  gotScenarioPaths:
  blinkHUD:
  stopBlinkHUD:
  blinkTab:
  stopBlinkTab:
  clearBlockly:
  selectLastBlock:
  showCommsImage:
  hideCommsImage:
  blockExecuted:
  blocklyStarted:
  toggledCamera:
  toggledHelicam:
  toggledGraph:
  toggledTiles:
  resetRoverSensors:
  resetHUDState:
  enableBlocklyTab:
  clearBlocklyTabs:
  playVideo:
  videoPlayed:
  playedVO:
  setObjective:
  setHUDElementProperty:
  mouseOverHUD:
  progressFound:
children:
  soundManager:
    includes: source/marsGameSound.vwf
  instrumentationManager:
    includes: source/instrumentationManager.vwf
  globalTriggerManager:
    includes: source/scenario/globalScenarioTriggers.vwf
  environment:
    extends: http://vwf.example.com/node3.vwf
    source: assets/3d/Terrain/scene.dae
    type: model/vnd.collada+xml
    children:
      heightmap:
        extends: http://vwf.example.com/heightmap.vwf
        source: assets/3d/Terrain/heightmap.png
        type: image/png
        properties:
            minWorldX: -275 
            maxWorldX: 25
            minWorldY: -45
            maxWorldY: 255
            minWorldZ: -2.5
            maxWorldZ: 15
      crashPod:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Start/crash_pod.dae
        type: model/vnd.collada+xml
        properties:
          translation: [ 0, -1.5, 0 ]
      roverTracks:
        extends: http://vwf.example.com/node3.vwf
        source: assets/3d/Terrain/rover_tracks_straight.dae
        type: model/vnd.collada+xml
  collisionTerrain:
    extends: http://vwf.example.com/node3.vwf
    source: assets/3d/Terrain/collision_terrain.dae
    type: model/vnd.collada+xml
    properties:
      visible: false
  blocks:
    includes: source/blocks.vwf
  backdrop:
    extends: http://vwf.example.com/node3.vwf
    source: assets/3d/Terrain/backdrop.dae
    type: model/vnd.collada+xml
    children:
      Group023:
        extends: http://vwf.example.com/node3.vwf
        children:
          hills: 
            extends: http://vwf.example.com/node3.vwf
            children:
              material:
                extends: http://vwf.example.com/material.vwf
                properties:
                  alphaTest: 0.85
          mountains:
            extends: http://vwf.example.com/node3.vwf
  sunLight:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "directional"
      color: [ 255, 245, 230 ]
      translation: [ 2, 1, 16 ]
      intensity: 0.5
  envLight:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "hemisphere"
      translation: [ 0, 0, 100 ]
      color: [ 255, 200, 175 ]
      groundColor: [ 200, 160, 80 ]
      intensity: 0.7
  player:
    extends: http://vwf.example.com/node3.vwf
    methods:
      initializeEventHandlers:
      togglePerspective:
      setRoverVisible:
    children:
      targetFollower:
        extends: http://vwf.example.com/node3.vwf
        properties:
          targetPath:
            set: |
              this.setTargetPath$( value );
            value: "/player/rover"
          needToSetupEventHandler$: false
          firstPersonOffset: [ 0, 0, 1 ]
          topDownOffset: [ 0, 0, 40 ]
        methods:
          onSceneReady$:
          setTargetPath$:
          followTarget$:
        children:
          camera:
            extends: http://vwf.example.com/camera.vwf
            implements: [ "http://vwf.example.com/navigable.vwf" ]
            properties:
              navmode: walk
              translationSpeed: 0
              translation: [ 0, 0, 1 ]
              rotation: [ 0, 0, 1, 270 ]
              far: 100000
              pointOfView:
                set: |
                  this.changePointOfView$( value );
                value: thirdPerson
              orbiting: false

              # The start poses are given as [ radius, yawAngle, pitchAngle ]
              firstPersonStartPose: [ 0, 0, 0 ]
              thirdPersonStartPose: [ 16.316, 0, -15 ]
              topDownStartPose: [ 0, 0, -90 ]
            methods:
              changePointOfView$:
              setCameraPose:
              setNavigationFromPOV:
            events:
              changedPOV:
            scripts:
            - source: "source/camera.js"
        scripts:
        - source: "source/targetFollower.js"
      rover:
        extends: source/rover.vwf
        implements: [ "http://vwf.example.com/blockly/controller.vwf", "source/griddable.vwf" ]
        source: assets/3d/Rover/rover_retro.dae
        type: model/vnd.collada+xml
        properties:
          displayName: "Rover"
          sceneNode:
            get: |
              if ( !this.sceneNode ) {
                this.sceneNode = this.find( "/" )[ 0 ];
              }
              return this.sceneNode;
          terrainName:
            set: |
              this.terrainName = value;
              this.terrain = this.find( "//" + value )[ 0 ];
              //@ sourceURL=index.vwf.player.rover.terrainName.set
            value: collisionTerrain
          terrain:
            get: |
              if ( !this.terrain ) {
                this.terrain = this.find( "//" + this.terrainName )[ 0 ];
              }
              return this.terrain;
              //@ sourceURL=index.vwf.player.rover.terrain.get
          currentGridSquare: [ 0, 0 ]
          sensorValue: false
          wheelFL:
            get: |
              if ( !this.wheelFL ) {
                this.wheelFL = this.find( "Cylinder014/Cylinder058/wheel" )[ 0 ];
              }
              return this.wheelFL;
          wheelBL:
            get: |
              if ( !this.wheelBL ) {
                this.wheelBL = this.find( "Cylinder014/Cylinder059/wheel001" )[ 0 ];
              }
              return this.wheelBL;
          wheelFR:
            get: |
              if ( !this.wheelFR ) {
                this.wheelFR = this.find( "Cylinder014/Cylinder050/wheel002" )[ 0 ];
              }
              return this.wheelFR;
          wheelBR:
            get: |
              if ( !this.wheelBR ) {
                this.wheelBR = this.find( "Cylinder014/Cylinder060/wheel003" )[ 0 ];
              }
              return this.wheelBR;
          wheelRadius: 0.3304
        children:
          Cylinder014:
            extends: http://vwf.example.com/node3.vwf
            children: 
              Cylinder058:
                extends: http://vwf.example.com/node3.vwf
                children: 
                  wheel:
                    extends: http://vwf.example.com/node3.vwf
              Cylinder059:
                extends: http://vwf.example.com/node3.vwf
                children: 
                  wheel001:
                    extends: http://vwf.example.com/node3.vwf
              Cylinder050:
                extends: http://vwf.example.com/node3.vwf
                children: 
                  wheel002:
                    extends: http://vwf.example.com/node3.vwf
                    children: 
                      material:
                        extends: http://vwf.example.com/material.vwf
              Cylinder060:
                extends: http://vwf.example.com/node3.vwf
                children: 
                  wheel003:
                    extends: http://vwf.example.com/node3.vwf
                    children: 
                      material:
                        extends: http://vwf.example.com/material.vwf
          cargo:
            extends: source/inventory.vwf
            properties:
              capacity: 4
              inventoryIsVisible: false
    scripts:
     - source: source/player.js
  pickups:
    extends: http://vwf.example.com/node3.vwf
    children:
      radio:
        extends: source/pickups/radio.vwf
        properties:
          animationPlaying: true
          animationLoop: true
      battery:
        extends: source/pickups/battery_1.vwf
      supplies_1:
        extends: source/pickups/supplies.vwf
      supplies_2:
        extends: source/pickups/supplies.vwf
      helicam:
        extends: source/pickups/helicam.vwf
      minirover:
        extends: source/pickups/minirover.vwf
  mainMenuScenario:
    includes: source/scenario/mainMenu.vwf
  introScreenScenario:
    includes: source/scenario/introScreenScenario.vwf
  scenario1a:
    includes: source/scenario/scenario1a.vwf
  scenario1b:
    includes: source/scenario/scenario1b.vwf
  scenario1c:
    includes: source/scenario/scenario1c.vwf
  scenario1d:
    includes: source/scenario/scenario1d.vwf
  scenario1e:
    includes: source/scenario/scenario1e.vwf
  scenario1f:
    includes: source/scenario/scenario1f.vwf
  scenario1g:
    includes: source/scenario/scenario1g.vwf
  scenario1h:
    includes: source/scenario/scenario1h.vwf
  scenario1i:
    includes: source/scenario/scenario1i.vwf
  scenario2a:
    includes: source/scenario/scenario2a.vwf
  scenario2b:
    includes: source/scenario/scenario2b.vwf
  scenario2c:
    includes: source/scenario/scenario2c.vwf
  scenario2d:
    includes: source/scenario/scenario2d.vwf
  scenario2e:
    includes: source/scenario/scenario2e.vwf
  scenario2f:
    includes: source/scenario/scenario2f.vwf
  scenario3a:
    includes: source/scenario/scenario3a.vwf
  scenario3b:
    includes: source/scenario/scenario3b.vwf
  scenario3c:
    includes: source/scenario/scenario3c.vwf
  scenario3d:
    includes: source/scenario/scenario3d.vwf
  scenario3e:
    includes: source/scenario/scenario3e.vwf
  scenario3f:
    includes: source/scenario/scenario3f.vwf
  blocklyGraph:
    extends: http://vwf.example.com/graphtool/graph.vwf
    implements: "source/griddable.vwf"
    properties:
      graphScale: 3
      gridInterval: 1
      gridLineInterval: 4
      gridLength: 64
      xAxisVisible: true
      yAxisVisible: true
      zAxisVisible: false
      gridVisible: true
      axisOpacity: 1
      gridOpacity: 0.75
      renderTop: true
    children:
      blocklyLine:
        extends: http://vwf.example.com/graphtool/graphlinefunction.vwf
        properties:
          lineFunction:
            set: |
              this.lineFunction = value;
              this.lineGraphed();
            value: undefined
          startValue: -64
          endValue: 64
          pointCount: 400
          color: [ 100, 255, 100 ]
          opacity: 1
          lineThickness: 0.15
          renderTop: true
          visible: false
        events:
          lineGraphed:
    scripts: |
      this.initialize = function() {
        this.future( 0 ).setGraphVisibility( false );
      }
  gridTileGraph:
    extends: http://vwf.example.com/graphtool/graph.vwf
    properties:
      graphScale: 3
      gridInterval: 1
      gridLineInterval: 4
      gridLength: 1
      xAxisVisible: false
      yAxisVisible: false
      zAxisVisible: false
      gridVisible: false
      axisOpacity: 1
      gridOpacity: 1
      renderTop: false
      tileVisible: false
    children:
      mapTiles:
        extends: http://vwf.example.com/graphtool/graphgroup.vwf
        properties:
          groupVisible: false
          graphObjects: []
      callOutTile:
        extends: http://vwf.example.com/graphtool/graphplane.vwf
        properties:
          origin: [ 0, 0, 0 ]
          normal: [ 0, 0, 1 ]
          rotationAngle: 90
          size: 1
          color: [ 255, 255, 255 ]
          opacity: 0.5
          doubleSided: false
          renderTop: true
          visible: false
        methods:
          callOut:
          blink:
          stopBlink:
        scripts:
          - source: source/callouttile.js
  graph:
    extends: http://vwf.example.com/node3.vwf
    implements: http://vwf.example.com/blockly/controller.vwf
    properties:
      blockly_toolbox: assets/scenario/graph.xml
  alerts:
    extends: http://vwf.example.com/logger.vwf
    properties:
      logger_maxLogs: 1
      logger_lifeTime: 10000
      logger_logs: []
    scripts:
    - source: source/loggerHelper.js
  subtitles:
    extends: http://vwf.example.com/logger.vwf
    properties:
      logger_maxLogs: 10
      logger_lifeTime: 10000
      logger_logs: []
    events:
      addSubtitle:
    scripts:
    - source: source/loggerHelper.js
scripts: 
 - source: source/scene.js
